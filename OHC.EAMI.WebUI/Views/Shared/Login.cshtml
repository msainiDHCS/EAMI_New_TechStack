@using OHC.EAMI.WebUI.Models;
@model LoginViewModel

@{
    ViewBag.Title = "Log in";
    Layout = "~/Views/Shared/_UnAuthLayout.cshtml";
}

@using (Html.BeginForm("login", "account", FormMethod.Post, new { @class = "form-horizontal", role = "form", @ID = "frmlogin", autocomplete = "off" }))
{
    @Html.AntiForgeryToken()
    <div id="dvLoginErrorHolder"></div>

    <div id="divportalhome" class="col-lg-offset-3 col-lg-6">
        <div class="panel panel-default" style="" id="divloginpanel">
            <div class="panel-heading">
                <h3 class="panel-title"><i class="fa fa-sign-in">&nbsp;</i>Log in</h3>
            </div>
            <div class="panel-body" style="float:none;">
                <p class="help-block">
                    This is a State of California computer application that is for official use only by authorized users and is subject to being monitored and/or restricted at any time. This application processes, stores, or transmits confidential information.  Unauthorized or improper use of this system may result in administrative disciplinary action and/or Civil and criminal penalties.  By continuing to use this application you indicate your awareness of and consent to these terms and conditions of use.  Do not log in and use this application if you are not an authorized user or you do not agree to the conditions stated in this warning.<br /><br />
                </p>
                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="alert alert-danger">
                        @Html.ValidationSummary(true)
                    </div>
                }
                <div>
                    <div class="form-group">
                        <div class="col-xs-6 col-xs-offset-3">
                            @Html.LabelFor(m => m.UserName, "User Name", new { @class = "control-label" })<span style="color:red;font-weight:bold">&nbsp;*</span>
                            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control input-sm", id = "UserName", @maxlength = "100" })
                        </div>
                        <div class="clearfix"></div>
                        <div class="col-xs-6 col-xs-offset-3">
                            @Html.LabelFor(m => m.Password, "Password", new { @class = "control-label" })<span style="color:red;font-weight:bold">&nbsp;*</span>
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control input-sm", id = "Password", @maxlength = "200" })
                        </div>
                        <div class="clearfix"></div>
                        <div class="col-xs-3 col-xs-offset-3">
                            <button type="submit" onclick="return LoginUser();" class="btn btn-primary btn-sm" id="btnLogin" style="margin-top:15px;">Log In</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script type="text/javascript">

    var frmValidator = $("#frmlogin").validate({
        errorElement: 'span',
        ignore: ".ignore",
        rules: {
            UserName: {
                required: true,
            },
            Password: {
                required: true,
            },
        },

        // Messages for form validation
        messages: {
            UserName: {
                required: 'Please enter user name',
            },
            Password: {
                required: 'Please enter password',
            },
        },
        errorPlacement: function (error, element) {
            error.insertAfter(element);
        }

    });

    // Edit user validation rules
    function ajaxValidateForm() {
        return frmValidator.form();
    }

    function LoginUser() {

        if (!ajaxValidateForm()) {
            return false;
        }
        return true;
    };

    $(document).ready(function () {

        $("#UserName").val('administrator');
        $("#Password").val('password');

    });

</script>
