@{
    ViewBag.Title = "Edit Fund";
}

@using System.Web.Optimization;
@model OHC.EAMI.WebUI.Models.EAMIFundModel

@using (Html.BeginForm("EditFund", "ManageSystems", FormMethod.Post, new { @class = "form-horizontal", role = "form", @ID = "frmEditFund", autocomplete = "off" }))
{
    @Html.AntiForgeryToken()
<div class="panel-body">
    <div id="dvEditErrorHolder"></div>
    <div class="form-group">
        <div class="col-xs-4">
            <input type="hidden" id="hdnSystemId" value="@Model.System_ID" />
            @Html.HiddenFor(input => input.Fund_ID, new { @class = "form-control input-sm", id = "txtFundID", maxlength = "10" })
            @Html.HiddenFor(input => input.System_ID, new { @class = "form-control input-sm", id = "hdnSystemID", maxlength = "10" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-4">
            @Html.LabelFor(input => input.System_Code, new { @class = "control-label" })<span style="color:red;font-weight:bold">&nbsp;*</span>
            @Html.TextBoxFor(input => input.System_Code, new { @class = "form-control input-sm", id = "txtSystemCode", maxlength = "200", @disabled = "disabled" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-4">
            @Html.LabelFor(input => input.Fund_Code, new { @class = "control-label" })<span style="color:red;font-weight:bold">&nbsp;*</span>
            @Html.TextBoxFor(input => input.Fund_Code, new { @class = "form-control input-sm", id = "txtFundCode", maxlength = "20", @disabled = "disabled" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-4">
            @Html.LabelFor(input => input.Fund_Name, new { @class = "control-label" })<span style="color:red;font-weight:bold">&nbsp;*</span>
            @Html.TextBoxFor(input => input.Fund_Name, new { @class = "form-control input-sm", id = "txtFundName", maxlength = "50" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-4">
            @Html.LabelFor(input => input.Stat_Year, new { @class = "control-label" })<span style="color:red;font-weight:bold">&nbsp;*</span>
            @Html.TextBoxFor(input => input.Stat_Year, new { @class = "form-control input-sm", id = "txtStatYear", maxlength = "4", minlength = "4", onkeypress = "return isNumberKey(event)" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-4">
            @Html.LabelFor(input => input.Fund_Description, new { @class = "control-label" })<span style="color:red;font-weight:bold"></span>
            @Html.TextBoxFor(input => input.Fund_Description, new { @class = "form-control input-sm", id = "txtFundDescription", maxlength = "100" })
        </div>
    </div>
</div>
    <input type="checkbox" checked="@Model.IsActive" style="visibility:hidden" id="chkIsFundActive" />

    <div class="modal fade" id="modalFundDeleteConfirm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" data-backdrop="true" style="margin-top:100px;">
        <div class="modal-dialog text-center" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">Delete Fund Code : @Model.Fund_Code (@Model.Fund_Name)</h4>
                </div>
                <div class="modal-body" style="margin: 10px;">
                    <p>
                        <strong>
                            Are you sure you want to delete this Fund <label id="lblDeleteFundId"></label>?
                        </strong>
                    </p>
                </div>
                <div style="clear:both;margin-bottom:20px;"></div>               
                <div class="modal-footer">
                    <button type="button" class="btn btn-dhcs-secondary" onclick="ConfirmDeleteFund()">Delete</button>
                    <button type="button" class="btn btn-dhcs-secondary" onclick="CloseDeleteFundModal()">Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <div style="clear:both"></div>
    <div class="form-group" style="margin-top:20px;" id="dvActive">
        <div class="col-xs-4">
            <button type="button" onclick="return EditFund();" class="btn btn-dhcs-secondary btn-sm" id="btnUpdateFund">Update</button>&nbsp;
            <button type="button" onclick="return EditFundReset();" class="btn btn-dhcs-secondary btn-sm" id="btnEditFundReset">Reset</button>&nbsp;
            <button type="button" onclick="return EditFundBack();" class="btn btn-dhcs-secondary btn-sm" id="btnEditFundBack" style="float:none">Back</button>&nbsp;
            <button type="button" onclick="return DeleteFund();" class="btn btn-dhcs-secondary btn-sm" id="btnFundDelete" style="float:none">Delete</button>&nbsp;
        </div>
    </div>
}

<script type="text/javascript">

    var frmValidator = $("#frmEditFund").validate({
        errorElement: 'span',
        ignore: ".ignore",
        rules: {
            Fund_Code: {
                required: true,
            },
            Fund_Name: {
                required: true,
            },
            Stat_Year: {
                required: true,
            },
        },

        // Messages for form validation
        messages: {
            Fund_Code: {
                required: 'Please enter Fund Code',
            },
            Fund_Name: {
                required: 'Please enter Fund Name',
            },
            Stat_Year: {
                required: 'Please enter valid numeric Stat Year',
            },
        },
        errorPlacement: function (error, element) {
            error.insertAfter(element);
        }

    });

    function ajaxValidateAddNewUser() {
        return frmValidator.form();
    }

    //Check Stat Year takes only valid numbers
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        console.log('keyCode =', charCode);
        if ((charCode < 48 || charCode > 57)) {
            if (charCode == 8 || charCode == 0) {
                return true;
            }
            else {
                return false;
            }
        }
    }

    function EditFund() {
        var isActive = document.getElementById('chkIsFundActive').checked;

        if (!ajaxValidateAddNewUser()) {
            return false;
        }
        else {
            $('#header').css("display", "block");
            HideFormStatusMessage('frmEditFund', 'dvEditErrorHolder');

            $.ajax({
                url: getEAMIAbsoluteUrl('~/ManageSystems/UpdateFund?isActive=' + isActive),
                type: 'POST',
                datatype: "html",
                cache: false,
                data: $("#frmEditFund").serialize(),
                success: function (data) {
                    var message = "";
                    var status = "";
                    if (data != null) {
                        //undefined in case of some exception. for ex: Session override error
                        if (data.message == undefined || data.status == undefined) {
                            message = "An error occured. Please refresh the screen and try again.";
                            status = false;
                        }
                        else {
                            message = data.message;
                            status = data.status;
                        }

                        wasItAAsuccess = (status == "OK");

                        if (wasItAAsuccess) {

                            setFormStatusMessage('frmEditFund', 'dvEditErrorHolder', true, 'Fund successfully updated', 4);
                        }
                        else {
                            setFormStatusMessage('frmEditFund', 'dvEditErrorHolder', false, message, 5);
                        }
                    }
                    else { setFormStatusMessage('frmEditFund', 'dvEditErrorHolder', false, message, 5); }
                },
                error: function () {
                    setFormStatusMessage('frmEditFund', 'dvEditErrorHolder', false, 'An error occured', 5);

                }
            });
        }
        return false;
    }

    function EditFundReset() {

        //EAMIShowAjaxLoadingContent('dvActionArea');
        HideFormStatusMessage('frmEditFund', 'dvAddErrorHolder');
        var systemID = document.getElementById('hdnSystemId').value;
        $('#dvtab3').load(getEAMIAbsoluteUrl('~/ManageSystems/EditFund?fundID=' + currentFundID + '&systemID=' + systemID));
        return false;
    }

    function EditFundBack() {
        $('#divLoadingAnimation').css("display", "block");
        EAMIShowAjaxLoadingContent('divLoadingAnimation_Inner');
        var systemID = document.getElementById('hdnSystemId').value;

        $("#dvMainArea").slideUp(250, function () {
            // Animation complete.
            $('#dvActionArea').slideDown(250, function () {
                $('#dvtab3').load(getEAMIAbsoluteUrl('~/ManageSystems/ViewFunds?systemID=' + systemID + '&includeInactive=' + false));

                // End Loading... Animation
                $('#divLoadingAnimation_Inner').empty();
                $('#divLoadingAnimation').css("display", "none");
            });
        });

        return false;
    }

    function DeleteFund() {
        $('#modalFundDeleteConfirm').modal('show');
    }

    function ConfirmDeleteFund() {
        $.ajax({
            url: getEAMIAbsoluteUrl('~/ManageSystems/DeleteFund?isActive=' + false),
            type: 'POST',
            datatype: "html",
            cache: false,
            data: $("#frmEditFund").serialize(),
            success: function (data) {
                $('#modalFundDeleteConfirm').modal('hide');
                var message = "";
                var status = "";
                if (data != null) {
                    //undefined in case of some exception. for ex: Session override error
                    if (data.message == undefined || data.status == undefined) {
                        message = "An error occured. Please refresh the screen and try again.";
                        status = false;
                    }
                    else {
                        message = data.message;
                        status = data.status;
                    }

                    document.getElementById('btnUpdateFund').disabled = true;
                    document.getElementById('btnEditFundReset').disabled = true;

                    wasItAAsuccess = (status == "OK");
                    if (wasItAAsuccess) {
                        document.getElementById('btnFundDelete').disabled = true;
                        setFormStatusMessage('frmEditFund', 'dvEditErrorHolder', true, message, 4);
                    }
                    else {
                        document.getElementById('btnFundDelete').disabled = false;
                        setFormStatusMessage('frmEditFund', 'dvEditErrorHolder', false, message, 5);
                    }
                }
                else { setFormStatusMessage('frmEditFund', 'dvEditErrorHolder', false, message, 5); }
            },
            error: function () {
                setFormStatusMessage('frmEditFund', 'dvEditErrorHolder', false, 'An error occured. Please refresh the screen and try again', 5);
            }
        });
    }

    function CloseDeleteFundModal() {
        $('#modalFundDeleteConfirm').modal('hide');
        $('.has-error').remove();
    }

    $(document).ready(function () {

    });

</script>
