@{
    ViewBag.Title = "Add New Exclusive Payment Type";
}


@using System.Web.Optimization;
@model OHC.EAMI.WebUI.Models.EAMIExclusivePmtTypeModel

@using (Html.BeginForm("CreateExclusivePmtType", "ManageSystems", FormMethod.Post, new { @class = "form-horizontal", role = "form", @ID = "frmAddNewExclusivePmtType", autocomplete = "off" }))
{
    @*<div class="col-lg-offset-0 col-lg-12" id="dvMainArea">
    <div class="panel panel-default">
        <div class="panel-heading" style="background-color: #17315a; color: white;">
            <h3 class="panel-title"><i class="fa fa-user-plus">&nbsp;</i>Add New Exclusive Payment Type</h3>
        </div>*@
        <div class="panel-body">
            <div id="dvAddErrorHolder"></div>
            <div class="form-group">
                <div class="col-xs-4">
                    <input type="hidden" id="hdnSystemId" value="@Model.System_ID" />
                    <div class="form-group">
                        <div class="col-xs-4">
                            @Html.HiddenFor(input => input.System_ID, new { @class = "form-control input-sm", id = "hdnSystemID", maxlength = "10" })
                            @Html.HiddenFor(input => input.System_Code, new { @class = "form-control input-sm", id = "hdnSystemCode", maxlength = "10" })
                        </div>
                    </div>
                    @Html.LabelFor(input => input.System_Code, new { @class = "control-label" })<span style="color:red;font-weight:bold"></span>
                    @Html.TextBoxFor(input => input.System_Code, new { @class = "form-control input-sm", id = "txtSystemCode", maxlength = "200", @disabled = "disabled" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-xs-4">
                    @Html.LabelFor(input => input.Exclusive_Payment_Type_Code, new { @class = "control-label" })<span style="color:red;font-weight:bold">&nbsp;*</span>
                    @Html.TextBoxFor(input => input.Exclusive_Payment_Type_Code, new { @class = "form-control input-sm", id = "txtExclusivePmtTypeCode", maxlength = "20" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-xs-4">
                    @Html.LabelFor(input => input.Exclusive_Payment_Type_Name, new { @class = "control-label" })<span style="color:red;font-weight:bold">&nbsp;*</span>
                    @Html.TextBoxFor(input => input.Exclusive_Payment_Type_Name, new { @class = "form-control input-sm", id = "txtExclusivePmtTypeName", maxlength = "50" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-xs-4">
                    @Html.LabelFor(input => input.Exclusive_Payment_Type_Description, new { @class = "control-label" })
                    @Html.TextBoxFor(input => input.Exclusive_Payment_Type_Description, new { @class = "form-control input-sm", id = "txtExclusivePmtTypeDesc", maxlength = "100" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-xs-4">

                    @*@Html.Label("Funds", "Funds", new { @class = "control-label" })<span style="color:red;font-weight:bold">&nbsp;*</span>*@
                    @Html.LabelFor(input => input.Funds, new { @class = "control-label" })<span style="color:red;font-weight:bold">&nbsp;*</span>
                    @Html.DropDownListFor(input => input.Fund_ID, new SelectList(Model.Funds, "Value", "Text"), new { @class = "form-control input-sm", id = "ddlFundID" })
                </div>
            </div>
        </div>

        <div class="form-group">

        </div>
        <div style="clear:both"></div>
        <div class="form-group" style="margin-top:20px;">
            <div class="col-xs-4">
                <button type="button" onclick="return AddNewExclusivePmtType();" class="btn btn-dhcs-secondary btn-sm" id="btnAddNewExclusivePmtType">Add New </button>&nbsp;
                <button type="button" onclick="return AddNewExclusivePmtTypeReset();" class="btn btn-dhcs-secondary btn-sm" id="btnAddNewExclusivePmtTypeReset">Reset</button>&nbsp;
                <button type="button" onclick="return AddNewExclusivePmtTypeCancel();" class="btn btn-dhcs-secondary btn-sm" id="btnAddNewExclusivePmtTypeCancel" style="float:none">Back</button>&nbsp;
            </div>
        </div>
        @*
    </div>
</div>*@
}

<script type="text/javascript">

    var frmValidator = $("#frmAddNewExclusivePmtType").validate({

        errorElement: 'span',
        ignore: ".ignore",
        rules: {
            Exclusive_Payment_Type_Code: {
                required: true,
            },
            Exclusive_Payment_Type_Name: {
                required: true,
            },
            //Exclusive_Payment_Type_Description: {
            //    required: true,
            //},
        },

        // Messages for form validation
        messages: {
            Exclusive_Payment_Type_Code: {
                required: 'Please enter Exclusive Payment Type Code',
            },
            Exclusive_Payment_Type_Name: {
                required: 'Please enter Exclusive Payment Type Name',
            },
            //Exclusive_Payment_Type_Description: {
            //    required: 'Please enter Exclusive Payment Type Description',
            //},
        },
        errorPlacement: function (error, element) {
            error.insertAfter(element);
        }

    });

    function AddNewExclusivePmtType() {
        if (!ajaxValidateAddNewExclusivePmtType()) {
            return false;
        }
        else {
            HideFormStatusMessage('frmAddNewExclusivePmtType', 'dvAddErrorHolder');
            var systemID = document.getElementById('hdnSystemID').value;
            var isSuccess = false;
            $.ajax({
                url: getEAMIAbsoluteUrl('~/ManageSystems/CreateExclusivePmtType'),
                type: 'POST',
                datatype: "html",
                cache: false,
                data: $("#frmAddNewExclusivePmtType").serialize(),
                success: function (data) {
                    var message = "";
                    var status = "";
                    if (data != null) {
                        //undefined in case of some exception. for ex: Session override error
                        if (data.message == undefined || data.status == undefined) {
                            message = "An error occured. Please refresh the screen and try again.";
                            status = false;
                        }
                        else {
                            message = data.message;
                            status = data.status;
                        }
                        wasItAAsuccess = (status == "OK");

                        if (wasItAAsuccess) {
                            setFormStatusMessage('frmAddNewExclusivePmtType', 'dvAddErrorHolder', true, message, 4);
                        }
                        else {
                            setFormStatusMessage('frmAddNewExclusivePmtType', 'dvAddErrorHolder', false, message, 5);
                        }
                    }
                },
                error: function () {
                    setFormStatusMessage('frmEditExclusivePmtType', 'dvAddErrorHolder', false, 'An error occured. Please refresh the screen and try again.', 5);

                }
            });
        }
        return false;
    }

    // Edit user validation rules
    function ajaxValidateAddNewExclusivePmtType() {
        return frmValidator.form();
    }

    function AddNewExclusivePmtTypeReset() {

        Clear_Form('frmAddNewExclusivePmtType');
        HideFormStatusMessage('frmAddNewExclusivePmtType', 'dvAddErrorHolder');
        frmValidator.resetForm();
        document.getElementById('txtSystemCode').value = document.getElementById('hdnSystemCode').value;
        return false;
    }

    function AddNewExclusivePmtTypeCancel() {
        $('#divLoadingAnimation').css("display", "block");
        EAMIShowAjaxLoadingContent('divLoadingAnimation_Inner');
        var systemID = document.getElementById('hdnSystemID').value;

        $("#dvMainArea").slideUp(250, function () {
            // Animation complete.
            //EAMIShowAjaxLoadingContent('dvActionArea');
            $('#dvActionArea').slideDown(250, function () {
                $('#dvtab2').load(getEAMIAbsoluteUrl('~/ManageSystems/ViewExclusivePmtType?systemID=' + systemID + '&includeInactive=' + false));

                // End Loading... Animation
                $('#divLoadingAnimation_Inner').empty();
                $('#divLoadingAnimation').css("display", "none");
            });
        });

        return false;
    }

    //$(document).ready(function () {

    //    $('#ddlUserTypeID').change(function () {
    //        if ($(this).val() == "1") {
    //            $('#dvUserPassword').hide();
    //            $('#txtUserPassword').addClass('ignore');
    //            $('#dvUserDomain').show();
    //            $('#txtDomainName').removeClass('ignore');
    //        }
    //        else if ($(this).val() == "2") {
    //            $('#dvUserDomain').hide();
    //            $('#txtUserPassword').removeClass('ignore');
    //            $('#dvUserPassword').show();
    //            $('#txtDomainName').addClass('ignore');
    //        }
    //    });

    //    $('#ddlUserTypeID').change();

    //});

</script>
