

@{
    ViewBag.Title = "Add New SCO Properties";
}


@using System.Web.Optimization;
@model OHC.EAMI.WebUI.Models.SCOPropertyModel

@using (Html.BeginForm("CreateSCOProperties", "ManageSystems", FormMethod.Post, new { @class = "form-horizontal", role = "form", @ID = "frmAddNewSCOProperty", autocomplete = "off" }))
{

    <div class="panel-body">
        <div id="dvAddErrorHolder"></div>
        <div class="form-group">
            <div class="col-xs-4">
                <input type="hidden" id="hdnSystemId" value="@Model.System_ID" />
                @Html.HiddenFor(input => input.Fund_ID, new { @class = "form-control input-sm", id = "hdnFundID", maxlength = "10" })
                @Html.HiddenFor(input => input.System_ID, new { @class = "form-control input-sm", id = "hdnSystemID", maxlength = "10" })
                @Html.HiddenFor(input => input.SCO_Property_Type_ID, new { @class = "form-control input-sm", id = "hdnPropertyTypeID", maxlength = "10" })
                @Html.HiddenFor(input => input.SCO_Property_ID, new { @class = "form-control input-sm", id = "hdnPropertyID", maxlength = "10" })
                @Html.HiddenFor(input => input.SCO_Property_Name, new { @class = "form-control input-sm", id = "hdnPropertyName", maxlength = "100" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-4">
                @Html.LabelFor(input => input.System_Code, new { @class = "control-label" })<span style="color:red;font-weight:bold">&nbsp;</span>
                @Html.TextBoxFor(input => input.System_Code, new { @class = "form-control input-sm", id = "txtSystemCode", maxlength = "200", @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-4">
                @Html.LabelFor(input => input.SelectedSCOPropertyTypesLookUp, new { @class = "control-label" })<span style="color:red;font-weight:bold">&nbsp;*</span>
                @Html.DropDownListFor(input => input.SCO_Property_Type_ID, new SelectList(Model.SelectedSCOPropertyTypesLookUp, "Value", "Text"), new { @class = "form-control input-sm", id = "ddlPropertyTypeName",Name = "PropID" , @onchange = "CallChangefunc(this.value)" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-4">
                @Html.LabelFor(input => input.SelectedSCOPropertiesEnumsLookUp, new { @class = "control-label" })<span style="color:red;font-weight:bold">&nbsp;*</span>
                @Html.DropDownListFor(input => input.SCO_Property_Enum_ID, new SelectList(Model.SelectedSCOPropertiesEnumsLookUp, "Value", "Text"), new { @class = "form-control input-sm", id = "ddlPropertyEnumName" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-4">
                @Html.LabelFor(input => input.SelectedFund, new { @class = "control-label" })<span style="color:red;font-weight:bold">&nbsp;*</span>
                @Html.DropDownListFor(input => input.Fund_ID, new SelectList(Model.SelectedFund, "Value", "Text"), new { @class = "form-control input-sm", id = "ddlFund" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-4">
                @Html.LabelFor(input => input.SelectedPaymentType, new { @class = "control-label" })<span style="color:red;font-weight:bold">&nbsp;*</span>
                @Html.DropDownListFor(input => input.PaymentTypeID, new SelectList(Model.SelectedPaymentType, "Value", "Text"), new { @class = "form-control input-sm", id = "ddlSelectedPaymentType" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-4">
                @Html.LabelFor(input => input.SelectedEnvironment, new { @class = "control-label" })<span style="color:red;font-weight:bold">&nbsp;*</span>
                @Html.DropDownListFor(input => input.EnvironmentID, new SelectList(Model.SelectedEnvironment, "Value", "Text"), new { @class = "form-control input-sm", id = "ddlSelectedEnvironment" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-4">
                @Html.LabelFor(input => input.SCO_Property_Value, new { @class = "control-label" })<span style="color:red;font-weight:bold">&nbsp;*</span>
                @Html.TextBoxFor(input => input.SCO_Property_Value, new { @class = "form-control input-sm", id = "txtPropertyValue", maxlength = "50" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-4">
                @Html.LabelFor(input => input.Description, new { @class = "control-label" })<span style="color:red;font-weight:bold"></span>
                @Html.TextBoxFor(input => input.Description, new { @class = "form-control input-sm", id = "txtPropertyDescription", maxlength = "100" })
            </div>
        </div>
    </div>
    <div class="form-group">

    </div>
    <div style="clear:both"></div>
    <div class="form-group" style="margin-top:20px;">
        <div class="col-xs-4">
            <button type="button" onclick="return AddNewSCOProperty();" class="btn btn-dhcs-secondary btn-sm" id="btnAddNewSCOProperty">Add New</button>&nbsp;
            <button type="button" onclick="return AddNewSCOPropertyReset();" class="btn btn-dhcs-secondary btn-sm" id="btnAddNewSCOPropertyReset">Reset</button>&nbsp;
            <button type="button" onclick="return AddNewSCOPropertyBack();" class="btn btn-dhcs-secondary btn-sm" id="btnAddNewSCOPropertyBack" style="float:none">Back</button>&nbsp;
        </div>
    </div>

}

<script type="text/javascript">
    var hdnPropertyTypeId = $("#ddlPropertyTypeName").val()

    var frmValidator = $("#frmAddNewSCOProperty").validate({
        errorElement: 'span',
        ignore: ".ignore",
        rules: {
            SCO_Property_Value: {
                required: true,
            },


        },

        // Messages for form validation
        messages: {
            SCO_Property_Value: {
                required: 'Please enter SCO Property Value',
            },


        },
        errorPlacement: function (error, element) {
            error.insertAfter(element);
        }

    });

    function ajaxValidateAddNewSCOProperty() {
        return frmValidator.form();
    }

    
    function AddNewSCOProperty() {
        if (!ajaxValidateAddNewSCOProperty()) {
            return false;
        }
        else {
            HideFormStatusMessage('frmAddNewSCOProperty', 'dvAddErrorHolder');
            var systemID = document.getElementById('hdnSystemID').value;            
            var fundID = $("#ddlFund").val();
            var propertyTypeID = $("#ddlPropertyTypeName").val();            
            var environment = $("#ddlSelectedEnvironment option:selected").text();            
            var pmtType = $("#ddlSelectedPaymentType option:selected").text();
            var propertyEnumID = $("#ddlPropertyEnumName").val();
            var propertyName = $("#ddlPropertyEnumName option:selected").text();
            
            var isSuccess = false;
            $.ajax({
                url: getEAMIAbsoluteUrl('~/ManageSystems/CreateSCOProperties?fundID=' + fundID + '&propertyTypeID=' + propertyTypeID + '&environment=' + environment + '&pmtType=' + pmtType + '&propertyName=' + propertyName + '&propertyEnumID=' + propertyEnumID),
                type: 'POST',
                datatype: "html",
                cache: false,
                data: $("#frmAddNewSCOProperty").serialize(),
                success: function (data) {
                    var message = "";
                    var status = "";
                    if (data != null) {
                        //undefined in case of some exception. for ex: Session override error
                        if (data.message == undefined || data.status == undefined) {
                            message = "An error occured. Please refresh the screen and try again.";
                            status = false;
                        }
                        else {
                            message = data.message;
                            status = data.status;
                        }
                        wasItAAsuccess = (status == "OK");

                        if (wasItAAsuccess) {
                            setFormStatusMessage('frmAddNewSCOProperty', 'dvAddErrorHolder', true, 'New SCO Property successfully created', 4);
                        }
                        else {
                            setFormStatusMessage('frmAddNewSCOProperty', 'dvAddErrorHolder', false,  message, 5);
                        }
                    }
                },
                error: function () {
                    setFormStatusMessage('frmAddNewSCOProperty', 'dvAddErrorHolder', false, 'An error occured. Please refresh the screen and try again.', 5);
                }
            });
        }
        return false;
    }

    function AddNewSCOPropertyReset() {

        HideFormStatusMessage('frmAddNewSCOProperty', 'dvAddErrorHolder');
       
        $("#ddlFund").prop("selectedIndex", 0);
        document.getElementById("ddlFund").disabled = true;
        $("#ddlSelectedPaymentType").prop("selectedIndex", 0);
        document.getElementById("ddlSelectedPaymentType").disabled = true;
        $("#ddlSelectedEnvironment").prop("selectedIndex", 0);
        document.getElementById("ddlSelectedEnvironment").disabled = true;
        $("#ddlPropertyTypeName").prop("selectedIndex", 0);
       
        CallResetfunc(1);
        document.getElementById('txtPropertyValue').value = '';
        document.getElementById('txtPropertyDescription').value = '';
        return false;
    }

    function AddNewSCOPropertyBack() {
        $('#divLoadingAnimation').css("display", "block");
        EAMIShowAjaxLoadingContent('divLoadingAnimation_Inner');
        
        $("#dvMainArea").slideUp(250, function () {
            // Animation complete.
            //EAMIShowAjaxLoadingContent('dvActionArea');
            var systemID = document.getElementById('hdnSystemID').value;
            $('#dvActionArea').slideDown(250, function () {
                $('#dvtab6').load(getEAMIAbsoluteUrl('~/ManageSystems/ViewSCOProperties?systemID=' + systemID + '&includeInactive=' + false));

                // End Loading... Animation
                $('#divLoadingAnimation_Inner').empty();
                $('#divLoadingAnimation').css("display", "none");
            });
        });

        return false;
    }

        //For dropdowns...
        $(function () {
           
            if ($("#ddlPropertyTypeName").val() > 0) {                
                if (document.getElementById('ddlPropertyTypeName').value != 3) {
                    //CallChangefunc(hdnPropertyTypeId);
                    document.getElementById("ddlFund").disabled = true;
                    document.getElementById("ddlSelectedPaymentType").disabled = true;
                    document.getElementById("ddlSelectedEnvironment").disabled = true;
                }
            }
            //Dropdownlist Selectedchange event
            $('#ddlPropertyTypeName').change(function () {
                // Get Dropdownlist seleted item text            
                if ($("#ddlPropertyTypeName").val() != 3) {
                    document.getElementById("ddlFund").disabled = true;
                    document.getElementById("ddlSelectedPaymentType").disabled = true;
                    document.getElementById("ddlSelectedEnvironment").disabled = true;
                }
                else {
                    document.getElementById("ddlFund").disabled = false;
                    document.getElementById("ddlSelectedPaymentType").disabled = false;
                    document.getElementById("ddlSelectedEnvironment").disabled = false;
                }

            })
        })
        function CallChangefunc(val) {
            //when ddl value changes, call code behind to repopulate based on the Property Type id.
            $.ajax({
                type: "GET",
                url: getEAMIAbsoluteUrl('~/ManageSystems/Dropdown_SelectedIndexChanged'),
                data: { scoPropertyTypeId: val },
                success: successFunc,
                error: errorFunc
            });

            function successFunc(data) {
                var select = $("#ddlPropertyEnumName");
                select.empty();
                $.each(data, function (index, itemData) {
                   // console.log(itemData);
                    select.append($('<option/>', {
                        value: itemData.SCO_Property_Enum_ID, //.Value,
                        text: itemData.Code //.Text
                    }));
                });
            }

            function errorFunc() {
                alert('error');
            }
        };

    function CallResetfunc(val) {
        //when ddl value changes, call code behind to repopulate based on the Property Type id.
        $.ajax({
            type: "GET",
            url: getEAMIAbsoluteUrl('~/ManageSystems/Dropdown_SelectedIndexChanged'),
            data: { scoPropertyTypeId: val },
            success: successFunc,
            error: errorFunc
        });

        function successFunc(data) {
            var select = $("#ddlPropertyEnumName");
            select.empty();
            $.each(data, function (index, itemData) {
                console.log(itemData);
                select.append($('<option/>', {
                    value: itemData.SCO_Property_Enum_ID, //.Value,
                    text: itemData.Code //.Text
                }));
            });
        }

        function errorFunc() {
            alert('error');
        }
    };


        $(document).ready(function () {
            console.log();
        });
    

</script>
